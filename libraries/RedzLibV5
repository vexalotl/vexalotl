for a, b in ipairs(game:GetService("CoreGui"):GetChildren()) do
	if (b.Name == "Lycan-x-OnTop") then
		b:Destroy();
	end
end
local c = game:GetService("MarketplaceService");
local d = game:GetService("UserInputService");
local e = game:GetService("TweenService");
local f = game:GetService("HttpService");
local g = game:GetService("RunService");
local h = game:GetService("CoreGui");
local i = game:GetService("Players");
local j = i.LocalPlayer;
local k = j:GetMouse();
local l = {Themes={Darker={["Color Hub 1"]=ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(25, 25, 25)),ColorSequenceKeypoint.new(0.5, Color3.fromRGB(32.5, 32.5, 32.5)),ColorSequenceKeypoint.new(1, Color3.fromRGB(25, 25, 25))}),["Color Hub 2"]=Color3.fromRGB(30, 30, 30),["Color Stroke"]=Color3.fromRGB(40, 40, 40),["Color Theme"]=Color3.fromRGB(88, 101, 242),["Color Text"]=Color3.fromRGB(243, 243, 243),["Color Dark Text"]=Color3.fromRGB(180, 180, 180)},Dark={["Color Hub 1"]=ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(40, 40, 40)),ColorSequenceKeypoint.new(0.5, Color3.fromRGB(47.5, 47.5, 47.5)),ColorSequenceKeypoint.new(1, Color3.fromRGB(40, 40, 40))}),["Color Hub 2"]=Color3.fromRGB(45, 45, 45),["Color Stroke"]=Color3.fromRGB(65, 65, 65),["Color Theme"]=Color3.fromRGB(65, 150, 255),["Color Text"]=Color3.fromRGB(245, 245, 245),["Color Dark Text"]=Color3.fromRGB(190, 190, 190)},Purple={["Color Hub 1"]=ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(27.5, 25, 30)),ColorSequenceKeypoint.new(0.5, Color3.fromRGB(32.5, 32.5, 32.5)),ColorSequenceKeypoint.new(1, Color3.fromRGB(27.5, 25, 30))}),["Color Hub 2"]=Color3.fromRGB(30, 30, 30),["Color Stroke"]=Color3.fromRGB(40, 40, 40),["Color Theme"]=Color3.fromRGB(150, 0, 255),["Color Text"]=Color3.fromRGB(240, 240, 240),["Color Dark Text"]=Color3.fromRGB(180, 180, 180)}},Info={Version="1.1.0"},Save={UISize={550,380},TabSize=160,Theme="Darker"},Settings={},Connection={},Instances={},Elements={},Options={},Flags={},Tabs={},Icons=loadstring(game:HttpGet("https://raw.githubusercontent.com/BinbinvoGamingVNClone/RedzLibV5/refs/heads/main/Icons.lua"))()};
local m = workspace.CurrentCamera.ViewportSize;
local n = m.Y / 450;
local o = l.Settings;
local p = l.Flags;
local q, r, s, t;
do
	function s(Instance, u)
		table.insert(l.Instances, {Instance=Instance,Type=u});
		return Instance;
	end
	function r(Instance, v)
		if v then
			table.foreach(v, function(w, x)
				x.Parent = Instance;
			end);
		end
		return Instance;
	end
	function q(Instance, y)
		if y then
			table.foreach(y, function(z, A)
				Instance[z] = A;
			end);
		end
		return Instance;
	end
	function t(...)
		local B = {...};
		if (type(B) ~= "table") then
			return;
		end
		local C = Instance.new(B[1]);
		local v = {};
		if (type(B[2]) == "table") then
			q(C, B[2]);
			r(C, B[3]);
			v = B[3] or {};
		elseif (typeof(B[2]) == "Instance") then
			C.Parent = B[2];
			q(C, B[3]);
			r(C, B[4]);
			v = B[4] or {};
		end
		return C;
	end
	local function D(E)
		if (readfile and isfile and isfile(E)) then
			local F = f:JSONDecode(readfile(E));
			if (type(F) == "table") then
				if rawget(F, "UISize") then
					l.Save['UISize'] = F['UISize'];
				end
				if rawget(F, "TabSize") then
					l.Save['TabSize'] = F['TabSize'];
				end
				if (rawget(F, "Theme") and VerifyTheme(F['Theme'])) then
					l.Save['Theme'] = F['Theme'];
				end
			end
		end
	end
	pcall(D, "redz library V5.json");
end
local G = {};
do
	G.InsertCallback = function(self, H, I)
		if (type(I) == "function") then
			table.insert(H, I);
		end
		return I;
	end;
	G.FireCallback = function(self, H, ...)
		for w, b in ipairs(H) do
			if (type(b) == "function") then
				task.spawn(b, ...);
			end
		end
	end;
	G.ToggleVisible = function(self, J, Bool)
		J.Visible = ((Bool ~= nil) and Bool) or J.Visible;
	end;
	G.ToggleParent = function(self, J, K)
		if (Bool ~= nil) then
			J.Parent = Bool;
		else
			J.Parent = not J.Parent and K;
		end
	end;
	G.GetConnectionFunctions = function(self, L, I)
		local M = {Function=I,Connected=true};
		M.Disconnect = function(self)
			if self.Connected then
				table.remove(L, table.find(L, self.Function));
				self.Connected = false;
			end
		end;
		M.Fire = function(self, ...)
			if self.Connected then
				task.spawn(self.Function, ...);
			end
		end;
		return M;
	end;
	G.GetCallback = function(self, N, O)
		local I = N[O] or N.Callback or function()
		end;
		if (type(I) == "table") then
			return {function(P)
				I[1][I[2]] = P;
			end};
		end
		return {I};
	end;
end
local Q, R = {}, l.Connection;
do
	local function S(T)
		if (type(T) ~= "table") then
			return;
		end
		for w, U in ipairs(T) do
			local L, V = {}, {};
			R[U] = V;
			Q[U] = L;
			V.Name = U;
			V.Connect = function(self, I)
				if (type(I) == "function") then
					table.insert(L, I);
					return G:GetConnectionFunctions(L, I);
				end
			end;
			V.Once = function(self, I)
				if (type(I) == "function") then
					local M;
					local function W(...)
						task.spawn(I, ...);
						M:Disconnect();
					end
					M = G:GetConnectionFunctions(L, W);
					return M;
				end
			end;
		end
	end
	R.FireConnection = function(self, U, ...)
		local R = ((type(U) == "string") and Q[U]) or Q[U.Name];
		for w, X in pairs(R) do
			task.spawn(X, ...);
		end
	end;
	S({"FlagsChanged","ThemeChanged","FileSaved","ThemeChanging","OptionAdded"});
end
local Y, Z, _;
do
	function _(a0)
		return (type(a0) == "string") and (p[a0] ~= nil);
	end
	function Y(a0)
		return (type(a0) == "string") and p[a0];
	end
	function Z(a1, P)
		if (a1 and ((P ~= p[a1]) or (type(P) == "table"))) then
			p[a1] = P;
			R:FireConnection("FlagsChanged", a1, P);
		end
	end
	local a2;
	R.FlagsChanged:Connect(function(a1, P)
		local a3 = o.ScriptFile;
		if (not a2 and a3 and writefile) then
			a2 = true;
			task.wait(0.1);
			a2 = false;
			local a4, a5 = pcall(function()
				return f:JSONEncode(p);
			end);
			if a4 then
				local a4 = pcall(writefile, a3, a5);
				if a4 then
					R:FireConnection("FileSaved", "Script-Flags", a3, a5);
				end
			end
		end
	end);
end
local a6 = t("ScreenGui", h, {Name="redz Library V5"}, {t("UIScale", {Scale=n,Name="Scale"})});
local a7 = h:FindFirstChild(a6.Name);
if (a7 and (a7 ~= a6)) then
	a7:Destroy();
end
local function a8(a9)
	if (type(a9) == "function") then
		return a9();
	end
	return a9;
end
local function aa(Instance, I)
	Instance.InputBegan:Connect(function(ab)
		if ((ab.UserInputType == Enum.UserInputType.MouseButton1) or (ab.UserInputType == Enum.UserInputType.Touch)) then
			while d:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
				task.wait();
			end
		end
		I();
	end);
end
local function ac(N)
	local Instance = N[1] or N.Instance;
	local ad = N[2] or N.Prop;
	local ae = N[3] or N.NewVal;
	local af = N[4] or N.Time or 0.5;
	local ag = N[5] or N.wait or false;
	local TweenInfo = TweenInfo.new(af, Enum.EasingStyle.Quint);
	local ah = e:Create(Instance, TweenInfo, {[ad]=ae});
	ah:Play();
	if ag then
		ah.Completed:Wait();
	end
	return ah;
end
local function ai(Instance)
	task.spawn(function()
		q(Instance, {Active=true,AutoButtonColor=false});
		local aj, ak, al;
		local function am(ab)
			local an = ab.Position - aj;
			local ao = UDim2.new(ak.X.Scale, ak.X.Offset + (an.X / n), ak.Y.Scale, ak.Y.Offset + (an.Y / n));
			ac({Instance,"Position",ao,0.35});
		end
		Instance.MouseButton1Down:Connect(function()
			al = true;
		end);
		Instance.InputBegan:Connect(function(ab)
			if ((ab.UserInputType == Enum.UserInputType.MouseButton1) or (ab.UserInputType == Enum.UserInputType.Touch)) then
				ak = Instance.Position;
				aj = ab.Position;
				while d:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
					g.Heartbeat:Wait();
					if al then
						am(ab);
					end
				end
				al = false;
			end
		end);
	end);
	return Instance;
end
local function VerifyTheme(ap)
	for aq, w in pairs(l.Themes) do
		if (aq == ap) then
			return true;
		end
	end
end
local function ar(as, at)
	if writefile then
		local au = f:JSONEncode(at);
		writefile(as, au);
	end
end
local ap = l.Themes[l.Save.Theme];
local function av(a0, X)
	l.Elements[a0] = X;
end
local function aw(ax, Instance, props, ...)
	local ay = l.Elements[ax](Instance, props, ...);
	return ay;
end
av("Corner", function(az, aA)
	local aB = q(t("UICorner", az, {CornerRadius=(aA or UDim.new(0, 7))}), props);
	return aB;
end);
av("Stroke", function(az, props, ...)
	local B = {...};
	local aB = s(q(t("UIStroke", az, {Color=(B[1] or ap["Color Stroke"]),Thickness=(B[2] or 1),ApplyStrokeMode="Border"}), props), "Stroke");
	return aB;
end);
av("Button", function(az, props, ...)
	local B = {...};
	local aB = s(q(t("TextButton", az, {Text="",Size=UDim2.fromScale(1, 1),BackgroundColor3=ap["Color Hub 2"],AutoButtonColor=false}), props), "Frame");
	aB.MouseEnter:Connect(function()
		aB.BackgroundTransparency = 0.4;
	end);
	aB.MouseLeave:Connect(function()
		aB.BackgroundTransparency = 0;
	end);
	if B[1] then
		aB.Activated:Connect(B[1]);
	end
	return aB;
end);
av("Gradient", function(az, props, ...)
	local B = {...};
	local aB = s(q(t("UIGradient", az, {Color=ap["Color Hub 1"]}), props), "Gradient");
	return aB;
end);
local function aC(Instance, aD, aE, aF)
	local aG = s(t("TextLabel", {Font=Enum.Font.GothamMedium,TextColor3=ap["Color Text"],Size=UDim2.new(1, -20),AutomaticSize="Y",Position=UDim2.new(0, 0, 0.5),AnchorPoint=Vector2.new(0, 0.5),BackgroundTransparency=1,TextTruncate="AtEnd",TextSize=10,TextXAlignment="Left",Text="",RichText=true}), "Text");
	local aH = s(t("TextLabel", {Font=Enum.Font.Gotham,TextColor3=ap["Color Dark Text"],Size=UDim2.new(1, -20),AutomaticSize="Y",Position=UDim2.new(0, 12, 0, 15),BackgroundTransparency=1,TextWrapped=true,TextSize=8,TextXAlignment="Left",Text="",RichText=true}), "DarkText");
	local aI = aw("Button", Instance, {Size=UDim2.new(1, 0, 0, 25),AutomaticSize="Y",Name="Option"});
	aw("Corner", aI, UDim.new(0, 6));
	LabelHolder = t("Frame", aI, {AutomaticSize="Y",BackgroundTransparency=1,Size=aF,Position=UDim2.new(0, 10, 0),AnchorPoint=Vector2.new(0, 0)}, {t("UIListLayout", {SortOrder="LayoutOrder",VerticalAlignment="Center",Padding=UDim.new(0, 2)}),t("UIPadding", {PaddingBottom=UDim.new(0, 5),PaddingTop=UDim.new(0, 5)}),aG,aH});
	local aJ = {};
	aJ.SetTitle = function(self, aK)
		if ((type(aK) == "string") and (aK:gsub(" ", ""):len() > 0)) then
			aG.Text = aK;
		end
	end;
	aJ.SetDesc = function(self, aL)
		if ((type(aL) == "string") and (aL:gsub(" ", ""):len() > 0)) then
			aH.Visible = true;
			aH.Text = aL;
			LabelHolder.Position = UDim2.new(0, 10, 0);
			LabelHolder.AnchorPoint = Vector2.new(0, 0);
		else
			aH.Visible = false;
			aH.Text = "";
			LabelHolder.Position = UDim2.new(0, 10, 0.5);
			LabelHolder.AnchorPoint = Vector2.new(0, 0.5);
		end
	end;
	aJ:SetTitle(aD);
	aJ:SetDesc(aE);
	return aI, aJ;
end
local function aM(Instance)
	if Instance:IsA("Frame") then
		return "BackgroundColor3";
	elseif Instance:IsA("ImageLabel") then
		return "ImageColor3";
	elseif Instance:IsA("TextLabel") then
		return "TextColor3";
	elseif Instance:IsA("ScrollingFrame") then
		return "ScrollBarImageColor3";
	elseif Instance:IsA("UIStroke") then
		return "Color";
	end
	return "";
end
l.GetIcon = function(self, O)
	if ((type(O) ~= "string") or O:find("rbxassetid://") or (#O == 0)) then
		return O;
	end
	local aN = nil;
	O = string.lower(O):gsub("lucide", ""):gsub("-", "");
	for a0, aO in self.Icons do
		a0 = a0:gsub("lucide", ""):gsub("-", "");
		if (a0 == O) then
			return aO;
		elseif (not aN and a0:find(O, 1, true)) then
			aN = aO;
		end
	end
	return aN or O;
end;
l.SetTheme = function(self, aP)
	if not VerifyTheme(aP) then
		return;
	end
	l.Save.Theme = aP;
	ar("redz library V5.json", l.Save);
	ap = l.Themes[aP];
	Comnection:FireConnection("ThemeChanged", aP);
	table.foreach(l.Instances, function(w, aQ)
		if (aQ.Type == "Gradient") then
			aQ.Instance.Color = ap["Color Hub 1"];
		elseif (aQ.Type == "Frame") then
			aQ.Instance.BackgroundColor3 = ap["Color Hub 2"];
		elseif (aQ.Type == "Stroke") then
			aQ.Instance[aM(aQ.Instance)] = ap["Color Stroke"];
		elseif (aQ.Type == "Theme") then
			aQ.Instance[aM(aQ.Instance)] = ap["Color Theme"];
		elseif (aQ.Type == "Text") then
			aQ.Instance[aM(aQ.Instance)] = ap["Color Text"];
		elseif (aQ.Type == "DarkText") then
			aQ.Instance[aM(aQ.Instance)] = ap["Color Dark Text"];
		elseif (aQ.Type == "ScrollBar") then
			aQ.Instance[aM(aQ.Instance)] = ap["Color Theme"];
		end
	end);
end;
l.SetScale = function(self, aR)
	aR = m.Y / math.clamp(aR, 300, 2000);
	n, a6.Scale.Scale = aR, aR;
end;
l.MakeWindow = function(self, N)
	local aS = N[1] or N.Name or N.Title or "redz Library V5";
	local aT = N[2] or N.SubTitle or "by : redz9999";
	o.ScriptFile = N[3] or N.SaveFolder or false;
	local function aU()
		local aV = o.ScriptFile;
		if (type(aV) ~= "string") then
			return;
		end
		if (not readfile or not isfile) then
			return;
		end
		local aW, aX = pcall(isfile, aV);
		if (aW and aX) then
			local aW, aY = pcall(readfile, aV);
			if (aW and (type(aY) == "string")) then
				local aW, aX = pcall(function()
					return f:JSONDecode(aY);
				end);
				p = (aW and aX) or {};
			end
		end
	end
	aU();
	local aZ, a_ = unpack(l.Save.UISize);
	local b0 = s(t("ImageButton", a6, {Size=UDim2.fromOffset(aZ, a_),Position=UDim2.new(0.5, -aZ / 2, 0.5, -a_ / 2),BackgroundTransparency=0.03,Name="Hub"}), "Main");
	aw("Gradient", b0, {Rotation=45});
	ai(b0);
	local b1 = aw("Corner", b0);
	local b2 = t("Folder", b0, {Name="Components"});
	local b3 = t("Folder", a6, {Name="Dropdown"});
	local b4 = t("Frame", b2, {Size=UDim2.new(1, 0, 0, 28),BackgroundTransparency=1,Name="Top Bar"});
	local aD = s(t("TextLabel", b4, {Position=UDim2.new(0, 15, 0.5),AnchorPoint=Vector2.new(0, 0.5),AutomaticSize="XY",Text=aS,TextXAlignment="Left",TextSize=12,TextColor3=ap["Color Text"],BackgroundTransparency=1,Font=Enum.Font.GothamMedium,Name="Title"}, {s(t("TextLabel", {Size=UDim2.fromScale(0, 1),AutomaticSize="X",AnchorPoint=Vector2.new(0, 1),Position=UDim2.new(1, 5, 0.9),Text=aT,TextColor3=ap["Color Dark Text"],BackgroundTransparency=1,TextXAlignment="Left",TextYAlignment="Bottom",TextSize=8,Font=Enum.Font.Gotham,Name="SubTitle"}), "DarkText")}), "Text");
	local b5 = s(t("ScrollingFrame", b2, {Size=UDim2.new(0, l.Save.TabSize, 1, -b4.Size.Y.Offset),ScrollBarImageColor3=ap["Color Theme"],Position=UDim2.new(0, 0, 1, 0),AnchorPoint=Vector2.new(0, 1),ScrollBarThickness=1.5,BackgroundTransparency=1,ScrollBarImageTransparency=0.2,CanvasSize=UDim2.new(),AutomaticCanvasSize="Y",ScrollingDirection="Y",BorderSizePixel=0,Name="Tab Scroll"}, {t("UIPadding", {PaddingLeft=UDim.new(0, 10),PaddingRight=UDim.new(0, 10),PaddingTop=UDim.new(0, 10),PaddingBottom=UDim.new(0, 10)}),t("UIListLayout", {Padding=UDim.new(0, 5)})}), "ScrollBar");
	local b6 = t("Frame", b2, {Size=UDim2.new(1, -b5.Size.X.Offset, 1, -b4.Size.Y.Offset),AnchorPoint=Vector2.new(1, 1),Position=UDim2.new(1, 0, 1, 0),BackgroundTransparency=1,ClipsDescendants=true,Name="Containers"});
	local b7, b8 = ai(t("ImageButton", b0, {Size=UDim2.new(0, 35, 0, 35),Position=b0.Size,Active=true,AnchorPoint=Vector2.new(0.8, 0.8),BackgroundTransparency=1,Name="Control Hub Size"})), ai(t("ImageButton", b0, {Size=UDim2.new(0, 20, 1, -30),Position=UDim2.new(0, b5.Size.X.Offset, 1, 0),AnchorPoint=Vector2.new(0.5, 1),Active=true,BackgroundTransparency=1,Name="Control Tab Size"}));
	local b9 = Instance.new("ScreenGui");
	local ba = Instance.new("Frame");
	local bb = Instance.new("Frame");
	bb.Name = "FPS";
	local bc = Instance.new("Frame");
	bc.Name = "Ping";
	local bd = Instance.new("Frame");
	bd.Name = "Menu";
	local be = Instance.new("TextButton");
	local bf = Instance.new("TextButton");
	local bg = Instance.new("TextButton");
	local bh = Instance.new("TextLabel");
	local bi = Instance.new("TextLabel");
	local bj = Instance.new("TextLabel");
	local bk = Instance.new("ImageButton");
	b9.Parent = game.CoreGui;
	b9.Name = "Lycan-x-OnTop";
	b9.ZIndexBehavior = Enum.ZIndexBehavior.Sibling;
	b9.IgnoreGuiInset = true;
	ba.Parent = b9;
	ba.Position = UDim2.new(0.105, 0, 0, 3);
	ba.Size = UDim2.new(0.8, 0, 0.03, 0);
	ba.BackgroundTransparency = 1;
	local bl = Instance.new("UIListLayout");
	bl.Parent = ba;
	bl.Padding = UDim.new(0, 10);
	bl.FillDirection = Enum.FillDirection.Horizontal;
	bl.HorizontalAlignment = Enum.HorizontalAlignment.Center;
	bb.Parent = ba;
	bb.Size = UDim2.new(0, 86, 0, 32);
	bb.Position = UDim2.new(0, 265, 0, 4);
	bb.BackgroundTransparency = 1;
	be.Parent = bb;
	be.Text = "";
	be.Size = UDim2.new(1, 0, 1, 0);
	be.BackgroundTransparency = 0.5;
	be.BackgroundColor3 = Color3.fromRGB(0, 0, 0);
	local bm = Instance.new("UICorner");
	bm.Parent = be;
	bm.CornerRadius = UDim.new(0, 8);
	bh.Parent = be;
	bh.Text = "FPS 99";
	bh.BackgroundTransparency = 1;
	bh.Position = UDim2.new(0, 12, 0.5, 0);
	bh.Size = UDim2.new(1, -24, 0.45, 7);
	bh.Font = Enum.Font.Gotham;
	bh.FontFace.Weight = Enum.FontWeight.Medium;
	bh.TextColor3 = Color3.fromRGB(255, 255, 255);
	bh.AnchorPoint = Vector2.new(0, 0.5);
	bh.TextScaled = false;
	bh.TextSize = 14;
	bd.Parent = ba;
	bd.Size = UDim2.new(0, 82, 0, 32);
	bd.Position = UDim2.new(0, 171, 0, 4);
	bd.BackgroundTransparency = 1;
	bg.Parent = bd;
	bg.Text = "";
	bg.Size = UDim2.new(1, 0, 1, 0);
	bg.BackgroundTransparency = 0.5;
	bg.BackgroundColor3 = Color3.fromRGB(0, 0, 0);
	local bn = Instance.new("UICorner");
	bn.Parent = bg;
	bn.CornerRadius = UDim.new(0, 8);
	bj.Parent = bg;
	bj.Text = "Menu";
	bj.BackgroundTransparency = 1;
	bj.Position = UDim2.new(0, 35, 0.5, 0);
	bj.Size = UDim2.new(1, -47, 0.45, 7);
	bj.Font = Enum.Font.Gotham;
	bj.FontFace.Weight = Enum.FontWeight.Medium;
	bj.TextColor3 = Color3.fromRGB(255, 255, 255);
	bj.AnchorPoint = Vector2.new(0, 0.5);
	bj.TextScaled = false;
	bj.TextSize = 14;
	bk.Parent = bg;
	bk.BackgroundTransparency = 1;
	bk.Position = UDim2.new(0, 12, 0.5, 0);
	bk.Size = UDim2.new(0, 15, 0.63, 7);
	bk.Image = "rbxassetid://14076923102";
	bk.ScaleType = Enum.ScaleType.Fit;
	bk.AnchorPoint = Vector2.new(0, 0.5);
	bc.Parent = ba;
	bc.Size = UDim2.new(0, 107, 0, 32);
	bc.Position = UDim2.new(0, 363, 0, 4);
	bc.BackgroundTransparency = 1;
	bf.Parent = bc;
	bf.Text = "";
	bf.Size = UDim2.new(1, 0, 1, 0);
	bf.BackgroundTransparency = 0.5;
	bf.BackgroundColor3 = Color3.fromRGB(0, 0, 0);
	local bo = Instance.new("UICorner");
	bo.Parent = bf;
	bo.CornerRadius = UDim.new(0, 8);
	bi.Parent = bf;
	bi.Text = "Ping: 999 ms";
	bi.BackgroundTransparency = 1;
	bi.Position = UDim2.new(0, 12, 0.5, 0);
	bi.Size = UDim2.new(1, -24, 0.45, 7);
	bi.Font = Enum.Font.Gotham;
	bi.FontFace.Weight = Enum.FontWeight.Medium;
	bi.TextColor3 = Color3.fromRGB(255, 255, 255);
	bi.AnchorPoint = Vector2.new(0, 0.5);
	bi.TextScaled = false;
	bi.TextSize = 14;
	game.Stats:WaitForChild("Network");
	game.Stats.Network:WaitForChild("ServerStatsItem");
	game.Stats.Network.ServerStatsItem:WaitForChild("Data Ping");
	task.spawn(function()
		while true do
			task.wait(0.1);
			ping = string.split(string.split(game.Stats.Network.ServerStatsItem["Data Ping"]:GetValueString(), " ")[1], ".");
			fps = string.split(game.Stats.Workspace.Heartbeat:GetValueString(), ".");
			bh.Text = "FPS " .. fps[1];
			bi.Text = "  Ping: " .. ping[1] .. " ms";
			if (tonumber(fps[1]) < 40) then
				bh.TextColor3 = Color3.fromRGB(255, 100, 100);
			end
			if (tonumber(fps[1]) < 20) then
				bh.TextColor3 = Color3.fromRGB(255, 40, 40);
			end
			if (tonumber(fps[1]) > 40) then
				bh.TextColor3 = Color3.fromRGB(200, 200, 200);
			end
			if (tonumber(ping[1]) < 200) then
				bi.TextColor3 = Color3.fromRGB(200, 200, 200);
			end
			if (tonumber(ping[1]) > 200) then
				bi.TextColor3 = Color3.fromRGB(255, 100, 100);
			end
			if (tonumber(ping[1]) > 300) then
				bi.TextColor3 = Color3.fromRGB(255, 40, 40);
			end
		end
	end);
	local function bp()
		local bq, br = b7.Position, b8.Position;
		b7.Position = UDim2.fromOffset(math.clamp(bq.X.Offset, 430, 1000), math.clamp(bq.Y.Offset, 200, 500));
		b8.Position = UDim2.new(0, math.clamp(br.X.Offset, 135, 250), 1, 0);
		b5.Size = UDim2.new(0, b8.Position.X.Offset, 1, -b4.Size.Y.Offset);
		b6.Size = UDim2.new(1, -b5.Size.X.Offset, 1, -b4.Size.Y.Offset);
		b0.Size = b7.Position;
	end
	b7:GetPropertyChangedSignal("Position"):Connect(bp);
	b8:GetPropertyChangedSignal("Position"):Connect(bp);
	aa(b7, function()
		if not Minimized then
			l.Save.UISize = {b0.Size.X.Offset,b0.Size.Y.Offset};
			ar("redz library V5.json", l.Save);
		end
	end);
	aa(b8, function()
		l.Save.TabSize = b5.Size.X.Offset;
		ar("redz library V5.json", l.Save);
	end);
	local bs = t("Folder", b4, {Name="Buttons"});
	local bt = t("ImageButton", {Size=UDim2.new(0, 14, 0, 14),Position=UDim2.new(1, -10, 0.5),AnchorPoint=Vector2.new(1, 0.5),BackgroundTransparency=1,Image="rbxassetid://10747384394",AutoButtonColor=false,Name="Close"});
	local bu = q(bt:Clone(), {Position=UDim2.new(1, -35, 0.5),Image="rbxassetid://10734896206",Name="Minimize"});
	r(bs, {bt,bu});
	local Minimized, bv, bw;
	local bx, by = {}, false;
	bx.CloseBtn = function(self)
		local bz = bx:Dialog({Title="Close",Text="Are you sure you want to close this script??",Options={{"Confirm",function()
			a6:Destroy();
		end},{"Cancel"}}});
	end;
	bx.MinimizeBtn = function(self)
		if bw then
			return;
		end
		bw = true;
		if Minimized then
			bu.Image = "rbxassetid://10734896206";
			ac({b0,"Size",bv,0.25,true});
			b7.Visible = true;
			b8.Visible = true;
			Minimized = false;
		else
			bu.Image = "rbxassetid://10734924532";
			bv = b0.Size;
			b7.Visible = false;
			b8.Visible = false;
			ac({b0,"Size",UDim2.fromOffset(b0.Size.X.Offset, 28),0.25,true});
			Minimized = true;
		end
		bw = false;
	end;
	bx.Minimize = function(self)
		b0.Visible = not b0.Visible;
	end;
	bx.AddMinimizeButton = function(self, N)
		local bA = ai(t("ImageButton", a6, {Size=UDim2.fromOffset(35, 35),Position=UDim2.fromScale(0.15, 0.15),BackgroundTransparency=1,BackgroundColor3=ap["Color Hub 2"],AutoButtonColor=false}));
		local bB, bC;
		if N.Corner then
			bC = aw("Corner", bA);
			q(bC, N.Corner);
		end
		if N.Stroke then
			bB = aw("Stroke", bA);
			q(bB, N.Corner);
		end
		q(bA, N.Button);
		bA.Activated:Connect(bx.Minimize);
		return {Stroke=bB,Corner=bC,Button=bA};
	end;
	bx.Set = function(self, bD, bE)
		if ((type(bD) == "string") and (type(bE) == "string")) then
			aD.Text = bD;
			aD.SubTitle.Text = bE;
		elseif (type(bD) == "string") then
			aD.Text = bD;
		end
	end;
	bx.Dialog = function(self, N)
		if b0:FindFirstChild("Dialog") then
			return;
		end
		if Minimized then
			bx:MinimizeBtn();
		end
		local bF = N[1] or N.Title or "Dialog";
		local bG = N[2] or N.Text or "This is a Dialog";
		local bH = N[3] or N.Options or {};
		local aI = t("Frame", {Active=true,Size=UDim2.fromOffset(250 * 1.08, 150 * 1.08),Position=UDim2.fromScale(0.5, 0.5),AnchorPoint=Vector2.new(0.5, 0.5)}, {s(t("TextLabel", {Font=Enum.Font.GothamBold,Size=UDim2.new(1, 0, 0, 20),Text=bF,TextXAlignment="Left",TextColor3=ap["Color Text"],TextSize=15,Position=UDim2.fromOffset(15, 5),BackgroundTransparency=1}), "Text"),s(t("TextLabel", {Font=Enum.Font.GothamMedium,Size=UDim2.new(1, -25),AutomaticSize="Y",Text=bG,TextXAlignment="Left",TextColor3=ap["Color Dark Text"],TextSize=12,Position=UDim2.fromOffset(15, 25),BackgroundTransparency=1,TextWrapped=true}), "DarkText")});
		aw("Gradient", aI, {Rotation=270});
		aw("Corner", aI);
		local bI = t("Frame", aI, {Size=UDim2.fromScale(1, 0.35),Position=UDim2.fromScale(0, 1),AnchorPoint=Vector2.new(0, 1),BackgroundColor3=ap["Color Hub 2"],BackgroundTransparency=1}, {t("UIListLayout", {Padding=UDim.new(0, 10),VerticalAlignment="Center",FillDirection="Horizontal",HorizontalAlignment="Center"})});
		local bJ = s(t("Frame", b0, {BackgroundTransparency=0.6,Active=true,BackgroundColor3=ap["Color Hub 2"],Size=UDim2.new(1, 0, 1, 0),BackgroundColor3=ap["Color Stroke"],Name="Dialog"}), "Stroke");
		b1:Clone().Parent = bJ;
		aI.Parent = bJ;
		ac({aI,"Size",UDim2.fromOffset(250, 150),0.2});
		ac({aI,"Transparency",0,0.15});
		ac({bJ,"Transparency",0.3,0.15});
		local bK, bz = 1, {};
		bz.Button = function(self, N)
			local a0 = N[1] or N.Name or N.Title or "";
			local bL = N[2] or N.Callback or function()
			end;
			bK = bK + 1;
			local bA = aw("Button", bI);
			aw("Corner", bA);
			q(bA, {Text=a0,Font=Enum.Font.GothamBold,TextColor3=ap["Color Text"],TextSize=12});
			for w, bA in pairs(bI:GetChildren()) do
				if bA:IsA("TextButton") then
					bA.Size = UDim2.new(1 / bK, -(((bK - 1) * 20) / bK), 0, 32);
				end
			end
			bA.Activated:Connect(bz.Close);
			bA.Activated:Connect(bL);
		end;
		bz.Close = function(self)
			ac({aI,"Size",UDim2.fromOffset(250 * 1.08, 150 * 1.08),0.2});
			ac({bJ,"Transparency",1,0.15});
			ac({aI,"Transparency",1,0.15,true});
			bJ:Destroy();
		end;
		table.foreach(bH, function(w, bA)
			bz:Button(bA);
		end);
		return bz;
	end;
	bx.SelectTab = function(self, bM)
		if (type(bM) == "number") then
			l.Tabs[bM].func:Enable();
		else
			for w, bN in pairs(l.Tabs) do
				if (bN.Cont == bM.Cont) then
					bN.func:Enable();
				end
			end
		end
	end;
	local bO = {};
	bx.MakeTab = function(self, bP, N)
		if (type(bP) == "table") then
			N = bP;
		end
		local bQ = N[1] or N.Title or "Tab!";
		local bR = N[2] or N.Icon or "";
		bR = l:GetIcon(bR);
		if (not bR:find("rbxassetid://") or (bR:gsub("rbxassetid://", ""):len() < 6)) then
			bR = false;
		end
		local bM = aw("Button", b5, {Size=UDim2.new(1, 0, 0, 24)});
		aw("Corner", bM);
		local bS = s(t("TextLabel", bM, {Size=UDim2.new(1, (bR and -25) or -15, 1),Position=UDim2.fromOffset((bR and 25) or 15),BackgroundTransparency=1,Font=Enum.Font.GothamMedium,Text=bQ,TextColor3=ap["Color Text"],TextSize=10,TextXAlignment=Enum.TextXAlignment.Left,TextTransparency=((by and 0.3) or 0),TextTruncate="AtEnd"}), "Text");
		local bT = s(t("ImageLabel", bM, {Position=UDim2.new(0, 8, 0.5),Size=UDim2.new(0, 13, 0, 13),AnchorPoint=Vector2.new(0, 0.5),Image=(bR or ""),BackgroundTransparency=1,ImageTransparency=((by and 0.3) or 0)}), "Text");
		local bU = s(t("Frame", bM, {Size=((by and UDim2.new(0, 4, 0, 4)) or UDim2.new(0, 4, 0, 13)),Position=UDim2.new(0, 1, 0.5),AnchorPoint=Vector2.new(0, 0.5),BackgroundColor3=ap["Color Theme"],BackgroundTransparency=((by and 1) or 0)}), "Theme");
		aw("Corner", bU, UDim.new(0.5, 0));
		local bV = s(t("ScrollingFrame", {Size=UDim2.new(1, 0, 1, 0),Position=UDim2.new(0, 0, 1),AnchorPoint=Vector2.new(0, 1),ScrollBarThickness=1.5,BackgroundTransparency=1,ScrollBarImageTransparency=0.2,ScrollBarImageColor3=ap["Color Theme"],AutomaticCanvasSize="Y",ScrollingDirection="Y",BorderSizePixel=0,CanvasSize=UDim2.new(),Name=("Container %i [ %s ]"):format(#bO + 1, bQ)}, {t("UIPadding", {PaddingLeft=UDim.new(0, 10),PaddingRight=UDim.new(0, 10),PaddingTop=UDim.new(0, 10),PaddingBottom=UDim.new(0, 10)}),t("UIListLayout", {Padding=UDim.new(0, 5)})}), "ScrollBar");
		table.insert(bO, bV);
		if not by then
			bV.Parent = b6;
		end
		local function bW()
			if bV.Parent then
				return;
			end
			for w, aI in pairs(bO) do
				if (aI:IsA("ScrollingFrame") and (aI ~= bV)) then
					aI.Parent = nil;
				end
			end
			bV.Parent = b6;
			bV.Size = UDim2.new(1, 0, 1, 150);
			table.foreach(l.Tabs, function(w, bN)
				if (bN.Cont ~= bV) then
					bN.func:Disable();
				end
			end);
			ac({bV,"Size",UDim2.new(1, 0, 1, 0),0.3});
			ac({bS,"TextTransparency",0,0.35});
			ac({bT,"ImageTransparency",0,0.35});
			ac({bU,"Size",UDim2.new(0, 4, 0, 13),0.35});
			ac({bU,"BackgroundTransparency",0,0.35});
		end
		bM.Activated:Connect(bW);
		by = true;
		local bN = {};
		table.insert(l.Tabs, {TabInfo={Name=bQ,Icon=bR},func=bN,Cont=bV});
		bN.Cont = bV;
		bN.Disable = function(self)
			bV.Parent = nil;
			ac({bS,"TextTransparency",0.3,0.35});
			ac({bT,"ImageTransparency",0.3,0.35});
			ac({bU,"Size",UDim2.new(0, 4, 0, 4),0.35});
			ac({bU,"BackgroundTransparency",1,0.35});
		end;
		bN.Enable = function(self)
			bW();
		end;
		bN.Visible = function(self, Bool)
			G:ToggleVisible(bM, Bool);
			G:ToggleParent(bV, Bool, b6);
		end;
		bN.Destroy = function(self)
			bM:Destroy();
			bV:Destroy();
		end;
		bN.AddSection = function(self, N)
			local bX = ((type(N) == "string") and N) or N[1] or N.Name or N.Title or N.Section;
			local bY = t("Frame", bV, {Size=UDim2.new(1, 0, 0, 20),BackgroundTransparency=1,Name="Option"});
			local bZ = s(t("TextLabel", bY, {Font=Enum.Font.GothamBold,Text=bX,TextColor3=ap["Color Text"],Size=UDim2.new(1, -25, 1, 0),Position=UDim2.new(0, 5),BackgroundTransparency=1,TextTruncate="AtEnd",TextSize=14,TextXAlignment="Left"}), "Text");
			local b_ = {};
			table.insert(l.Options, {type="Section",Name=bX,func=b_});
			b_.Visible = function(self, Bool)
				if (Bool == nil) then
					bY.Visible = not bY.Visible;
					return;
				end
				bY.Visible = Bool;
			end;
			b_.Destroy = function(self)
				bY:Destroy();
			end;
			b_.Set = function(self, aB)
				if aB then
					bZ.Text = a8(aB);
				end
			end;
			return b_;
		end;
		bN.AddParagraph = function(self, N)
			local c0 = N[1] or N.Title or "Paragraph";
			local c1 = N[2] or N.Text or "";
			local aI, c2 = aC(bV, c0, c1, UDim2.new(1, -20));
			local c3 = {};
			c3.Visible = function(self, ...)
				G:ToggleVisible(aI, ...);
			end;
			c3.Destroy = function(self)
				aI:Destroy();
			end;
			c3.SetTitle = function(self, aQ)
				c2:SetTitle(a8(aQ));
			end;
			c3.SetDesc = function(self, aQ)
				c2:SetDesc(a8(aQ));
			end;
			c3.Set = function(self, bD, bE)
				if (bD and bE) then
					c2:SetTitle(a8(bD));
					c2:SetDesc(a8(bE));
				elseif bD then
					c2:SetDesc(a8(bD));
				end
			end;
			return c3;
		end;
		bN.AddButton = function(self, N)
			local c4 = N[1] or N.Name or N.Title or "Button!";
			local c5 = N.Desc or N.Description or "";
			local bL = G:GetCallback(N, 2);
			local c6, c2 = aC(bV, c4, c5, UDim2.new(1, -20));
			local c7 = t("ImageLabel", c6, {Size=UDim2.new(0, 14, 0, 14),Position=UDim2.new(1, -10, 0.5),AnchorPoint=Vector2.new(1, 0.5),BackgroundTransparency=1,Image="rbxassetid://10709791437"});
			c6.Activated:Connect(function()
				G:FireCallback(bL);
			end);
			local bA = {};
			bA.Visible = function(self, ...)
				G:ToggleVisible(c6, ...);
			end;
			bA.Destroy = function(self)
				c6:Destroy();
			end;
			bA.Callback = function(self, ...)
				G:InsertCallback(bL, ...);
			end;
			bA.Set = function(self, bD, bE)
				if ((type(bD) == "string") and (type(bE) == "string")) then
					c2:SetTitle(bD);
					c2:SetDesc(bE);
				elseif (type(bD) == "string") then
					c2:SetTitle(bD);
				elseif (type(bD) == "function") then
					bL = bD;
				end
			end;
			return bA;
		end;
		bN.AddToggle = function(self, N)
			local bQ = N[1] or N.Name or N.Title or "Toggle";
			local c8 = N.Desc or N.Description or "";
			local bL = G:GetCallback(N, 3);
			local a1 = N[4] or N.Flag or false;
			local c9 = N[2] or N.Default or false;
			if _(a1) then
				c9 = Y(a1);
			end
			local bA, c2 = aC(bV, bQ, c8, UDim2.new(1, -38));
			local ca = s(t("Frame", bA, {Size=UDim2.new(0, 35, 0, 18),Position=UDim2.new(1, -10, 0.5),AnchorPoint=Vector2.new(1, 0.5),BackgroundColor3=ap["Color Stroke"]}), "Stroke");
			aw("Corner", ca, UDim.new(0.5, 0));
			local cb = t("Frame", ca, {BackgroundTransparency=1,Size=UDim2.new(0.8, 0, 0.8, 0),Position=UDim2.new(0.5, 0, 0.5, 0),AnchorPoint=Vector2.new(0.5, 0.5)});
			local cc = s(t("Frame", cb, {Size=UDim2.new(0, 12, 0, 12),Position=UDim2.new(0, 0, 0.5),AnchorPoint=Vector2.new(0, 0.5),BackgroundColor3=ap["Color Theme"]}), "Theme");
			aw("Corner", cc, UDim.new(0.5, 0));
			local bw;
			local function cd(aQ)
				if bw then
					return;
				end
				bw, c9 = true, aQ;
				Z(a1, c9);
				G:FireCallback(bL, c9);
				if c9 then
					ac({cc,"Position",UDim2.new(1, 0, 0.5),0.25});
					ac({cc,"BackgroundTransparency",0,0.25});
					ac({cc,"AnchorPoint",Vector2.new(1, 0.5),0.25,(Wait or false)});
				else
					ac({cc,"Position",UDim2.new(0, 0, 0.5),0.25});
					ac({cc,"BackgroundTransparency",0.8,0.25});
					ac({cc,"AnchorPoint",Vector2.new(0, 0.5),0.25,(Wait or false)});
				end
				bw = false;
			end
			task.spawn(cd, c9);
			bA.Activated:Connect(function()
				cd(not c9);
			end);
			local cc = {};
			cc.Visible = function(self, ...)
				G:ToggleVisible(bA, ...);
			end;
			cc.Destroy = function(self)
				bA:Destroy();
			end;
			cc.Callback = function(self, ...)
				G:InsertCallback(bL, ...)();
			end;
			cc.Set = function(self, bD, bE)
				if ((type(bD) == "string") and (type(bE) == "string")) then
					c2:SetTitle(bD);
					c2:SetDesc(bE);
				elseif (type(bD) == "string") then
					c2:SetTitle(bD, false, true);
				elseif (type(bD) == "boolean") then
					if (bw and bE) then
						repeat
							task.wait();
						until not bw 
					end
					task.spawn(cd, bD);
				elseif (type(bD) == "function") then
					bL = bD;
				end
			end;
			return cc;
		end;
		bN.AddDropdown = function(self, N)
			local ce = N[1] or N.Name or N.Title or "Dropdown";
			local cf = N.Desc or N.Description or "";
			local bH = N[2] or N.Options or {};
			local cg = N[3] or N.Default or {};
			local a1 = N[5] or N.Flag or false;
			local ch = N.MultiSelect or false;
			local bL = G:GetCallback(N, 4);
			local bA, c2 = aC(bV, ce, cf, UDim2.new(1, -180));
			local ci = s(t("Frame", bA, {Size=UDim2.new(0, 150, 0, 18),Position=UDim2.new(1, -10, 0.5),AnchorPoint=Vector2.new(1, 0.5),BackgroundColor3=ap["Color Stroke"]}), "Stroke");
			aw("Corner", ci, UDim.new(0, 4));
			local cj = s(t("TextLabel", ci, {Size=UDim2.new(0.85, 0, 0.85, 0),AnchorPoint=Vector2.new(0.5, 0.5),Position=UDim2.new(0.5, 0, 0.5, 0),BackgroundTransparency=1,Font=Enum.Font.GothamBold,TextScaled=true,TextColor3=ap["Color Text"],Text="..."}), "Text");
			local ck = t("ImageLabel", ci, {Size=UDim2.new(0, 15, 0, 15),Position=UDim2.new(0, -5, 0.5),AnchorPoint=Vector2.new(1, 0.5),Image="rbxassetid://10709791523",BackgroundTransparency=1});
			local cl = t("TextButton", b3, {Name="AntiClick",Size=UDim2.new(1, 0, 1, 0),BackgroundTransparency=1,Visible=false,Text=""});
			local cm = t("Frame", cl, {Size=UDim2.new(ci.Size.X, 0, 0),BackgroundTransparency=0.1,BackgroundColor3=Color3.fromRGB(255, 255, 255),AnchorPoint=Vector2.new(0, 1),Name="DropdownFrame",ClipsDescendants=true,Active=true});
			aw("Corner", cm);
			aw("Stroke", cm);
			aw("Gradient", cm, {Rotation=60});
			local cn = s(t("ScrollingFrame", cm, {ScrollBarImageColor3=ap["Color Theme"],Size=UDim2.new(1, 0, 1, 0),ScrollBarThickness=1.5,BackgroundTransparency=1,BorderSizePixel=0,CanvasSize=UDim2.new(),ScrollingDirection="Y",AutomaticCanvasSize="Y",Active=true}, {t("UIPadding", {PaddingLeft=UDim.new(0, 8),PaddingRight=UDim.new(0, 8),PaddingTop=UDim.new(0, 5),PaddingBottom=UDim.new(0, 5)}),t("UIListLayout", {Padding=UDim.new(0, 4)})}), "ScrollBar");
			local co, bw = 5;
			local function cp()
				bw = true;
				ac({ck,"Rotation",0,0.2});
				ac({cm,"Size",UDim2.new(0, 152, 0, 0),0.2,true});
				ac({ck,"ImageColor3",Color3.fromRGB(255, 255, 255),0.2});
				ck.Image = "rbxassetid://10709791523";
				cl.Visible = false;
				bw = false;
			end
			local function cq()
				return UDim2.fromOffset(152, co);
			end
			local function cr()
				local cs = 0;
				for w, aI in pairs(cn:GetChildren()) do
					if (aI:IsA("Frame") or (aI.Name == "Option")) then
						cs = cs + 1;
					end
				end
				co = (math.clamp(cs, 0, 10) * 25) + 10;
				if cl.Visible then
					cl.Visible = true;
					ac({cm,"Size",cq(),0.2,true});
				end
			end
			local function ct()
				if bw then
					return;
				end
				bw = true;
				if cl.Visible then
					ck.Image = "rbxassetid://10709791523";
					ac({ck,"ImageColor3",Color3.fromRGB(255, 255, 255),0.2});
					ac({cm,"Size",UDim2.new(0, 152, 0, 0),0.2,true});
					cl.Visible = false;
				else
					cl.Visible = true;
					ck.Image = "rbxassetid://10709790948";
					ac({ck,"ImageColor3",ap["Color Theme"],0.2});
					ac({cm,"Size",cq(),0.2,true});
				end
				bw = false;
			end
			local function cu()
				local cv = ci.AbsolutePosition;
				local cw = a6.AbsoluteSize;
				local cx = math.clamp(cv.X / n, 0, (cw.X / n) - cm.Size.X.Offset);
				local cy = math.clamp(cv.Y / n, 0, cw.Y / n);
				local cz = UDim2.fromOffset(cx, cy);
				local cA = ((cv.Y > (cw.Y / 1.4)) and 1) or ((co > 80) and 0.5) or 0;
				cm.AnchorPoint = Vector2.new(0, cA);
				ac({cm,"Position",cz,0.1});
			end
			local cB, cC, cD, cE, bU;
			do
				local c9 = ((type(cg) ~= "table") and {cg}) or cg;
				local cF = ch;
				local Options = {};
				bU = (cF and {}) or (_(a1) and Y(a1)) or c9[1];
				if cF then
					for O, P in pairs((_(a1) and Y(a1)) or c9) do
						if ((type(O) == "string") and (bH[O] or table.find(bH, O))) then
							bU[O] = P;
						elseif bH[P] then
							bU[P] = true;
						end
					end
				end
				local function cG()
					Z(a1, (cF and bU) or tostring(bU));
					G:FireCallback(bL, bU);
				end
				local function cH()
					if cF then
						local cI = {};
						for O, P in pairs(bU) do
							if P then
								table.insert(cI, O);
							end
						end
						cj.Text = ((#cI > 0) and table.concat(cI, ", ")) or "...";
					else
						cj.Text = tostring(bU or "...");
					end
				end
				local function cJ()
					if cF then
						for w, b in pairs(Options) do
							local cK, cL = b.nodes, b.Stats;
							ac({cK[2],"BackgroundTransparency",((cL and 0) or 0.8),0.35});
							ac({cK[2],"Size",((cL and UDim2.fromOffset(4, 12)) or UDim2.fromOffset(4, 4)),0.35});
							ac({cK[3],"TextTransparency",((cL and 0) or 0.4),0.35});
						end
					else
						for w, b in pairs(Options) do
							local cM = b.Value == bU;
							local cK = b.nodes;
							ac({cK[2],"BackgroundTransparency",((cM and 0) or 1),0.35});
							ac({cK[2],"Size",((cM and UDim2.fromOffset(4, 14)) or UDim2.fromOffset(4, 4)),0.35});
							ac({cK[3],"TextTransparency",((cM and 0) or 0.4),0.35});
						end
					end
					cH();
				end
				local function cN(Option)
					if cF then
						Option.Stats = not Option.Stats;
						Option.LastCB = tick();
						bU[Option.Name] = Option.Stats;
						cG();
					else
						Option.LastCB = tick();
						bU = Option.Value;
						cG();
					end
					cJ();
				end
				function cD(O, P)
					local a0 = tostring(((type(O) == "string") and O) or P);
					if Options[a0] then
						return;
					end
					Options[a0] = {index=O,Value=P,Name=a0,Stats=false,LastCB=0};
					if cF then
						local cL = bU[a0];
						bU[a0] = cL or false;
						Options[a0].Stats = cL;
					end
					local bA = aw("Button", cn, {Name="Option",Size=UDim2.new(1, 0, 0, 21),Position=UDim2.new(0, 0, 0.5),AnchorPoint=Vector2.new(0, 0.5)});
					aw("Corner", bA, UDim.new(0, 4));
					local cO = s(t("Frame", bA, {Position=UDim2.new(0, 1, 0.5),Size=UDim2.new(0, 4, 0, 4),BackgroundColor3=ap["Color Theme"],BackgroundTransparency=1,AnchorPoint=Vector2.new(0, 0.5)}), "Theme");
					aw("Corner", cO, UDim.new(0.5, 0));
					local cP = s(t("TextLabel", bA, {Size=UDim2.new(1, 0, 1),Position=UDim2.new(0, 10),Text=a0,TextColor3=ap["Color Text"],Font=Enum.Font.GothamBold,TextXAlignment="Left",BackgroundTransparency=1,TextTransparency=0.4}), "Text");
					bA.Activated:Connect(function()
						cN(Options[a0]);
					end);
					Options[a0].nodes = {bA,cO,cP};
				end
				function cE(O, P)
					local a0 = tostring(((type(O) == "string") and O) or P);
					if Options[a0] then
						if cF then
							bU[a0] = nil;
						else
							bU = nil;
						end
						Options[a0].nodes[1]:Destroy();
						table.clear(Options[a0]);
						Options[a0] = nil;
					end
				end
				function cC()
					return Options;
				end
				function cB(T, cQ)
					if cQ then
						table.foreach(Options, cE);
					end
					table.foreach(T, cD);
					cG();
					cJ();
				end
				table.foreach(bH, cD);
				cG();
				cJ();
			end
			bA.Activated:Connect(ct);
			cl.MouseButton1Down:Connect(cp);
			cl.MouseButton1Click:Connect(cp);
			b0:GetPropertyChangedSignal("Visible"):Connect(cp);
			ci:GetPropertyChangedSignal("AbsolutePosition"):Connect(cu);
			bA.Activated:Connect(cr);
			cn.ChildAdded:Connect(cr);
			cn.ChildRemoved:Connect(cr);
			cu();
			cr();
			local cR = {};
			cR.Visible = function(self, ...)
				G:ToggleVisible(bA, ...);
			end;
			cR.Destroy = function(self)
				bA:Destroy();
			end;
			cR.Callback = function(self, ...)
				G:InsertCallback(bL, ...)(bU);
			end;
			cR.Add = function(self, ...)
				local cS = {...};
				if (type(cS[1]) == "table") then
					table.foreach(Option, function(w, a0)
						cD(a0);
					end);
				else
					table.foreach(cS, function(w, a0)
						cD(a0);
					end);
				end
			end;
			cR.Remove = function(self, Option)
				for O, P in pairs(cC()) do
					if (((type(Option) == "number") and (O == Option)) or (P.Name == "Option")) then
						cE(O, P.Value);
					end
				end
			end;
			cR.Select = function(self, Option)
				if (type(Option) == "string") then
					for w, aQ in pairs(Options) do
						if (aQ.Name == Option) then
							aQ.Active();
						end
					end
				elseif (type(Option) == "number") then
					for cT, aQ in pairs(Options) do
						if (cT == Option) then
							aQ.Active();
						end
					end
				end
			end;
			cR.Set = function(self, bD, cQ)
				if (type(bD) == "table") then
					cB(bD, not cQ);
				elseif (type(bD) == "function") then
					bL = bD;
				end
			end;
			return cR;
		end;
		bN.AddSlider = function(self, N)
			local cU = N[1] or N.Name or N.Title or "Slider!";
			local cV = N.Desc or N.Description or "";
			local cW = N[2] or N.MinValue or N.Min or 10;
			local cX = N[3] or N.MaxValue or N.Max or 100;
			local cY = N[4] or N.Increase or 1;
			local bL = G:GetCallback(N, 6);
			local a1 = N[7] or N.Flag or false;
			local c9 = N[5] or N.Default or 25;
			if _(a1) then
				c9 = Y(a1);
			end
			cW, cX = cW / cY, cX / cY;
			local bA, c2 = aC(bV, cU, cV, UDim2.new(1, -180));
			local cZ = t("TextButton", bA, {Size=UDim2.new(0.45, 0, 1),Position=UDim2.new(1),AnchorPoint=Vector2.new(1, 0),AutoButtonColor=false,Text="",BackgroundTransparency=1});
			local c_ = s(t("Frame", cZ, {BackgroundColor3=ap["Color Stroke"],Size=UDim2.new(1, -20, 0, 6),Position=UDim2.new(0.5, 0, 0.5),AnchorPoint=Vector2.new(0.5, 0.5)}), "Stroke");
			aw("Corner", c_);
			local d0 = s(t("Frame", c_, {BackgroundColor3=ap["Color Theme"],Size=UDim2.fromScale(0.3, 1),BorderSizePixel=0}), "Theme");
			aw("Corner", d0);
			local d1 = t("Frame", c_, {Size=UDim2.new(0, 6, 0, 12),BackgroundColor3=Color3.fromRGB(220, 220, 220),Position=UDim2.fromScale(0.3, 0.5),AnchorPoint=Vector2.new(0.5, 0.5),BackgroundTransparency=0.2});
			aw("Corner", d1);
			local d2 = s(t("TextLabel", cZ, {Size=UDim2.new(0, 14, 0, 14),AnchorPoint=Vector2.new(1, 0.5),Position=UDim2.new(0, 0, 0.5),BackgroundTransparency=1,TextColor3=ap["Color Text"],Font=Enum.Font.FredokaOne,TextSize=12}), "Text");
			local n = t("UIScale", d2);
			local d3 = t("Frame", c_, {Position=UDim2.new(0, 0, 0.5, 0),Visible=false});
			local function cH(d4)
				local d5 = tonumber(d4 * cY);
				d5 = math.floor(d5 * 100) / 100;
				c9, d2.Text = d5, tostring(d5);
				G:FireCallback(bL, c9);
			end
			local function d6()
				local d7 = j:GetMouse();
				local d8 = d7.X - d3.AbsolutePosition.X;
				local d9 = d8 / c_.AbsoluteSize.X;
				d1.Position = UDim2.new(math.clamp(d9, 0, 1), 0, 0.5, 0);
			end
			local function da()
				d0.Size = UDim2.new(d1.Position.X.Scale, 0, 1, 0);
				local db = d1.Position.X.Scale;
				local d4 = math.floor((((db * cX) / cX) * (cX - cW)) + cW);
				cH(d4);
			end
			cZ.MouseButton1Down:Connect(function()
				ac({d1,"Transparency",0,0.3});
				bV.ScrollingEnabled = false;
				while d:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
					task.wait();
					d6();
				end
				ac({d1,"Transparency",0.2,0.3});
				bV.ScrollingEnabled = true;
				Z(a1, c9);
			end);
			d2:GetPropertyChangedSignal("Text"):Connect(function()
				n.Scale = 0.3;
				ac({n,"Scale",1.2,0.1});
				ac({d2,"Rotation",(math.random(-1, 1) * 5),0.15,true});
				ac({n,"Scale",1,0.2});
				ac({d2,"Rotation",0,0.1});
			end);
			function SetSlider(d4)
				if (type(d4) ~= "number") then
					return;
				end
				local cW, cX = cW * cY, cX * cY;
				local db = (d4 - cW) / (cX - cW);
				Z(a1, d4);
				ac({d1,"Position",UDim2.fromScale(math.clamp(db, 0, 1), 0.5),0.3,true});
			end
			SetSlider(c9);
			d1:GetPropertyChangedSignal("Position"):Connect(da);
			da();
			local cb = {};
			cb.Set = function(self, dc, dd)
				if (dc and dd) then
					c2:SetTitle(dc);
					c2:SetDesc(dd);
				elseif (type(dc) == "string") then
					c2:SetTitle(dc);
				elseif (type(dc) == "function") then
					bL = dc;
				elseif (type(dc) == "number") then
					SetSlider(dc);
				end
			end;
			cb.Callback = function(self, ...)
				G:InsertCallback(bL, ...)(tonumber(c9));
			end;
			cb.Visible = function(self, ...)
				G:ToggleVisible(bA, ...);
			end;
			cb.Destroy = function(self)
				bA:Destroy();
			end;
			return cb;
		end;
		bN.AddTextBox = function(self, N)
			local bQ = N[1] or N.Name or N.Title or "Text Box";
			local c8 = N.Desc or N.Description or "";
			local de = N[2] or N.Default or "";
			local df = N[5] or N.PlaceholderText or "Input";
			local dg = N[3] or N.ClearText or false;
			local bL = G:GetCallback(N, 4);
			if ((type(de) ~= "string") or (de:gsub(" ", ""):len() < 1)) then
				de = false;
			end
			local bA, c2 = aC(bV, bQ, c8, UDim2.new(1, -38));
			local ci = s(t("Frame", bA, {Size=UDim2.new(0, 150, 0, 18),Position=UDim2.new(1, -10, 0.5),AnchorPoint=Vector2.new(1, 0.5),BackgroundColor3=ap["Color Stroke"]}), "Stroke");
			aw("Corner", ci, UDim.new(0, 4));
			local dh = s(t("TextBox", ci, {Size=UDim2.new(0.85, 0, 0.85, 0),AnchorPoint=Vector2.new(0.5, 0.5),Position=UDim2.new(0.5, 0, 0.5, 0),BackgroundTransparency=1,Font=Enum.Font.GothamBold,TextScaled=true,TextColor3=ap["Color Text"],ClearTextOnFocus=dg,PlaceholderText=df,Text=""}), "Text");
			local di = t("ImageLabel", ci, {Size=UDim2.new(0, 12, 0, 12),Position=UDim2.new(0, -5, 0.5),AnchorPoint=Vector2.new(1, 0.5),Image="rbxassetid://15637081879",BackgroundTransparency=1});
			local dj = {};
			local function ab()
				local dk = dh.Text;
				if (dk:gsub(" ", ""):len() > 0) then
					if dj.OnChanging then
						dk = dj.OnChanging(dk) or dk;
					end
					G:FireCallback(bL, dk);
					dh.Text = dk;
				end
			end
			dh.FocusLost:Connect(ab);
			ab();
			dh.FocusLost:Connect(function()
				ac({di,"ImageColor3",Color3.fromRGB(255, 255, 255),0.2});
			end);
			dh.Focused:Connect(function()
				ac({di,"ImageColor3",ap["Color Theme"],0.2});
			end);
			dj.OnChanging = false;
			dj.Visible = function(self, ...)
				G:ToggleVisible(bA, ...);
			end;
			dj.Destroy = function(self)
				bA:Destroy();
			end;
			return dj;
		end;
		bN.AddDiscordInvite = function(self, N)
			local aD = N[1] or N.Name or N.Title or "Discord";
			local dl = N.Desc or N.Description or "";
			local dm = N[2] or N.Logo or "";
			local dn = N[3] or N.Invite or "";
			local dp = t("Frame", bV, {Size=UDim2.new(1, 0, 0, 80),Name="Option",BackgroundTransparency=1});
			local dq = t("TextLabel", dp, {Size=UDim2.new(1, 0, 0, 15),Position=UDim2.new(0, 5),TextColor3=Color3.fromRGB(40, 150, 255),Font=Enum.Font.GothamBold,TextXAlignment="Left",BackgroundTransparency=1,TextSize=10,Text=dn});
			local dr = s(t("Frame", dp, {Size=UDim2.new(1, 0, 0, 65),AnchorPoint=Vector2.new(0, 1),Position=UDim2.new(0, 0, 1),BackgroundColor3=ap["Color Hub 2"]}), "Frame");
			aw("Corner", dr);
			local ds = t("ImageLabel", dr, {Size=UDim2.new(0, 30, 0, 30),Position=UDim2.new(0, 7, 0, 7),Image=dm,BackgroundTransparency=1});
			aw("Corner", ds, UDim.new(0, 4));
			aw("Stroke", ds);
			local dt = s(t("TextLabel", dr, {Size=UDim2.new(1, -52, 0, 15),Position=UDim2.new(0, 44, 0, 7),Font=Enum.Font.GothamBold,TextColor3=ap["Color Text"],TextXAlignment="Left",BackgroundTransparency=1,TextSize=10,Text=aD}), "Text");
			local du = s(t("TextLabel", dr, {Size=UDim2.new(1, -52, 0, 0),Position=UDim2.new(0, 44, 0, 22),TextWrapped="Y",AutomaticSize="Y",Font=Enum.Font.Gotham,TextColor3=ap["Color Dark Text"],TextXAlignment="Left",BackgroundTransparency=1,TextSize=8,Text=dl}), "DarkText");
			local dv = t("TextButton", dr, {Size=UDim2.new(1, -14, 0, 16),AnchorPoint=Vector2.new(0.5, 1),Position=UDim2.new(0.5, 0, 1, -7),Text="Join",Font=Enum.Font.GothamBold,TextSize=12,TextColor3=Color3.fromRGB(220, 220, 220),BackgroundColor3=Color3.fromRGB(50, 150, 50)});
			aw("Corner", dv, UDim.new(0, 5));
			local dw;
			dv.Activated:Connect(function()
				setclipboard(dn);
				if dw then
					return;
				end
				dw = true;
				q(dv, {Text="Copied to Clipboard",BackgroundColor3=Color3.fromRGB(100, 100, 100),TextColor3=Color3.fromRGB(150, 150, 150)});
				task.wait(5);
				q(dv, {Text="Join",BackgroundColor3=Color3.fromRGB(50, 150, 50),TextColor3=Color3.fromRGB(220, 220, 220)});
				dw = false;
			end);
			local dx = {};
			dx.Destroy = function(self)
				dp:Destroy();
			end;
			dx.Visible = function(self, ...)
				G:ToggleVisible(dp, ...);
			end;
			return dx;
		end;
		return bN;
	end;
	bt.Activated:Connect(bx.CloseBtn);
	bu.Activated:Connect(bx.MinimizeBtn);
	bg.MouseButton1Click:Connect(function()
		b0.Visible = not b0.Visible;
	end);
	bk.MouseButton1Click:Connect(function()
		b0.Visible = not b0.Visible;
	end);
	return bx;
end;
return l;
